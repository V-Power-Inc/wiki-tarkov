# Bitbucket Pipeline file

# This template allows you to validate your PHP application.
# The workflow allows running tests and code linting on the default branch.

pipelines:
  branches:
    docker-release:
      - step:
          name: Build
          runs-on:
            - self.hosted
            - linux
          script:
            # Без строк ниже ничего не сработает (В битбакете нету docker-compose по умолчанию, Runner тоже в этом нуждается)
            - export DOCKER_COMPOSE_VERSION=1.18.0
            - export DOCKER_COMPOSE_URL=https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)
            - curl -L $DOCKER_COMPOSE_URL > docker-compose
            - chmod +x docker-compose
            - mv docker-compose /usr/local/bin

            # Экспоритруем переменные зашитые в битбакет для разветки
            - export DB_NAME=$DB_NAME
            - export DB_USER=$DB_USER
            - export DB_PASSWORD=$DB_PASSWORD

            - echo "Собираем Docker контейнеры"

            # Запускаем контейнеры приложения в фоновом режиме
            - sudo docker-compose up -d

            - echo "Обновляем зависимости composer"

            # Обновляем зависимости композера
            - sudo docker-compose exec -T app composer install --no-interaction